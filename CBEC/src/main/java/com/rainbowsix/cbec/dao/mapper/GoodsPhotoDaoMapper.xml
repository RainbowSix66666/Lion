<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rainbowsix.cbec.dao.IGoodsPhotoDao">

			<!-- 有信息无图片、无商品  无关联选择单个goodsphoto信息 -->
		<resultMap id="GoodsPhotoResultMap" type="GoodsPhoto">
		  <id property="photoId" column="PHOTO_ID"/>
		  <result property="goodId" column="GOODID" />
		  <result property="des" column="DES"/>
		  <result property="rank" column="RANK"/>
		  <result property="loaddate" column="LOADDATE"/>
		  	</resultMap>
		  	
		  	<!-- 取得照片等级的modelresultmapper -->
		  	<resultMap id="GoodsPhotoRankResultMap" type="GoodsPhoto">
				  <result property="rank" column="RANK"/>
		  	</resultMap>
		
			<!-- 有goodsphoto 无商品 的字段映射resultMap 选择单个goodsphoto全部内容 -->
		<resultMap id="GoodsPhotoWithPhotoResultMap" type="GoodsPhoto" extends="GoodsPhotoResultMap">
			<result property="photo" column="PHOTO"/>
		</resultMap>
		
			<!--有信息和商品 无图片 的字段映射resultMap  选择没有图片的关联列表-->
		<resultMap id="GoodsPhotoWithGoodsResultMap" type="GoodsPhoto" extends="GoodsPhotoResultMap">
			<!-- <association property="goods" column="PROID" select="com.rainbowsix.cbec.dao.IGoodsDao.byone"></association> -->
		  	<association property="good" resultMap="com.rainbowsix.cbec.dao.IGoodsDao.GoodsModel"></association> 
		</resultMap>
		
			<!--有信息、图片、商品的字段映射resultMap 选择有图片的关联列表 -->
		<resultMap id="GoodsPhotoWithPhotoAndInfotMap" type="GoodsPhoto" extends="GoodsPhotoWithPhotoResultMap">
			<!-- <association property="goods" column="PROID" select="com.rainbowsix.cbec.dao.IGoodsDao.byone"></association> -->
		  	<association property="good" resultMap="com.rainbowsix.cbec.dao.IGoodsDao.GoodsModel"></association> 
		</resultMap>
		
		<!-- 添加有照片信息 -->
		<insert id="createWithPhoto" parameterType="GoodsPhoto">
			insert into GoodsPhoto (PHOTO_ID, PROID, PHOTO, DES, RANK , LOADDATE, PhotoFileName,PhotoContentType)
			values (PHOTOID.nextval,#{proid},#{photo},#{des},#{rank},#{loaddate},#{photoFileName},#{photoContentType})
		</insert>
		
		<!-- 添加无图片信息 -->
		<insert id="createWithoutPhoto" parameterType="GoodsPhoto">
			insert into GoodsPhoto (PHOTO_ID, PROID, DES, RANK , LOADDATE)
			values (PHOTOID.nextval,#{proid},#{des},#{rank},#{loaddate})
		</insert>
		
		
		<update id="update" parameterType="GoodsPhoto">
			update GoodsPhoto set 
			MAKER_NO = #{makerNO, jdbcType=NUMERIC},
			MAKER_NAME = #{makerName, jdbcType=VARCHAR},
			MAKER_PASSWORD = #{makerPassword, jdbcType=VARCHAR},
			ADDRESS = #{address, jdbcType=VARCHAR},
			EMAIL = #{email, jdbcType=VARCHAR},
			PHONE_NUMBER = #{phoneNumber, jdbcType=VARCHAR}
			where MAKER_ID= #{makerId, jdbcType=NUMERIC}
		</update>
		
		<delete id="delete" parameterType="int">
			delete from MAKER where MAKER_ID= #{makerId}
		</delete>
		
		<!-- 取得所有照片列表无商品   无分页（无图片）无关联无图片 -->
		<select id="selectListWithoutGoodsByAll" resultMap="GoodsPhotoResultMap">
			select a.photo_id, a.des, a.rank, b.*  
			from goodsphoto a inner join goods b 
			on a.proid=b.proid
		</select>
		
		<!-- 取得所有GoodsPhoto列表有商品   无分页（无图片）有关联 -->
		<select id="selectListWithGoodsByAll" resultMap="GoodsPhotoWithGoodsResultMap">
			select a.photo_id, a.des, a.rank, b.*  
			from goodsphoto a inner join goods b 
			on a.proid=b.proid
		</select>
		
		<!--取单个 ： 照片信息、商品，照片 有关联 -->
		<select id="selectByPhotoId" parameterType="int" resultMap="GoodsPhotoWithPhotoAndInfotMap">
			select a.photo_id, a.des, a.photo, a.rank, b.*  
			from goodsphoto a inner join goods b 
			on a.proid=b.proid
			where photo_id=#{photoId}
		</select>
		
		<!--取得所有GoodsPhoto列表有商品   无分页（有图片）  -->
		<select id="selectLisAllWithGoods"  resultMap="GoodsPhotoWithPhotoAndInfotMap">
			select a.photo_id, a.des, a.photo, a.rank, b.*  
			from goodsphoto a inner join goods b 
			on a.proid=b.proid
		</select>
		
		<!--取得所有GoodsPhoto列表无商品   无分页（有图片）  -->
		<select id="selectLisAllWithoutGoods" resultMap="GoodsPhotoWithPhotoResultMap">
			select *  
			from goodsphoto
		</select>
		
		<!-- 根据条件取照片列表 无分页 -->
		<select id="selectListByCondition" resultMap="GoodsPhotoWithGoodsResultMap">
			select a.photo_id, a.des, a.rank, b.*  
			from goodsphoto a inner join goods b 
			on a.proid=b.proid
			<where>
				<if test="photoId!=0">
					and a.photo_id=#{photoId}
				</if>
				<if test="proid!=0">
					and a.proid=#{proid}
				</if>
				<if test="rank!=0">
					and a.rank=#{rank}
				</if>
				<if test="des!=null and des!=''">
					and a.des like #{des}
				</if>
			</where>
		</select>
		
		
		<!-- 根据条件取照片列表 有分页 -->
		<select id="selectListByConditionWithPage" resultMap="GoodsPhotoWithGoodsResultMap">
			SELECT * FROM  (SELECT X.*, ROWNUM RN  
	FROM (
			select a.photo_id, a.des, a.rank, a.LOADDATE , b.*  
			from goodsphoto a inner join goods b 
			on a.proid=b.proid
			<where>
				<if test="photoId!=0">
					and a.photo_id=#{photoId}
				</if>
				<if test="proid!=0">
					and a.proid=#{proid}
				</if>
				<if test="rank!=0">
					and a.rank=#{rank}
				</if>
				<if test="startDate!=null">
			      and a.LOADDATE &gt;=#{startDate}
			   </if>
			   <if test="endDate!=null">
			      and a.LOADDATE &lt;=#{endDate}
			   </if>
				<if test="des!=null and des!=''">
					and a.des like #{des}
				</if>
			</where>)
			 X WHERE ROWNUM &lt;=#{end})  WHERE RN &gt;=#{start}
		</select>
		
		<!-- 根据条件检索取得照片的个数 -->
		<select id="getCountWithPhoto" resultType="int">
			select count(a.photo_id)  
			from goodsphoto a
			<where>
				<if test="photoId!=0">
					and a.photo_id=#{photoId}
				</if>
				<if test="proid!=0">
					and a.proid=#{proid}
				</if>
				<if test="rank!=0">
					and a.rank=#{rank}
				</if>
				<if test="des!=null and des!=''">
					and a.des like #{des}
				</if>
			</where>
		</select>
		
		<!-- 取得照片等级的modelresultmapper -->
		<select id="selectRankCondition" resultMap="GoodsPhotoRankResultMap">
			select DISTINCT rank from goodsphoto  order by rank 
		</select>
		
		

</mapper>










